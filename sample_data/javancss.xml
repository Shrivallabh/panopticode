<?xml version="1.0"?>
<javancss>
  <date>2007-02-24</date>
  <time>22:26:56</time>
  <packages>
    <package>
      <name>org.panopticode</name>
      <classes>21</classes>
      <functions>205</functions>
      <ncss>972</ncss>
      <javadocs>6</javadocs>
      <javadoc_lines>26</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>357</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.doclet</name>
      <classes>1</classes>
      <functions>12</functions>
      <ncss>123</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>24</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.report.treemap</name>
      <classes>9</classes>
      <functions>72</functions>
      <ncss>513</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>126</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.ant</name>
      <classes>4</classes>
      <functions>24</functions>
      <ncss>99</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.emma</name>
      <classes>3</classes>
      <functions>29</functions>
      <ncss>275</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>6</single_comment_lines>
      <multi_comment_lines>63</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.javancss</name>
      <classes>1</classes>
      <functions>13</functions>
      <ncss>119</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>2</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.jdepend</name>
      <classes>1</classes>
      <functions>5</functions>
      <ncss>115</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.util</name>
      <classes>3</classes>
      <functions>11</functions>
      <ncss>79</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>3</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </package>
    <total>
      <classes>43</classes>
      <functions>371</functions>
      <ncss>2295</ncss>
      <javadocs>6</javadocs>
      <javadoc_lines>26</javadoc_lines>
      <single_comment_lines>13</single_comment_lines>
      <multi_comment_lines>612</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>8.00</td><td>43.00</td><td>371.00</td><td>2,295.00</td><td>6.00</td><td>Project</td></tr>
      <tr><td></td><td>5.38</td><td>46.38</td><td>286.88</td><td>0.75</td><td>Package</td></tr>
      <tr><td></td><td></td><td>8.63</td><td>53.37</td><td>0.14</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>6.19</td><td>0.02</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>org.panopticode.DecimalMetric</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.DecimalMetricDeclaration</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.IntegerMetric</name>
      <ncss>11</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.IntegerMetricDeclaration</name>
      <ncss>13</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.Level</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.Metric</name>
      <ncss>16</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.MetricDeclaration</name>
      <ncss>55</ncss>
      <functions>11</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.MetricTarget</name>
      <ncss>9</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>5</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeArgument</name>
      <ncss>69</ncss>
      <functions>13</functions>
      <classes>0</classes>
      <javadocs>1</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeClass</name>
      <ncss>138</ncss>
      <functions>31</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeFile</name>
      <ncss>76</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeMethod</name>
      <ncss>122</ncss>
      <functions>23</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodePackage</name>
      <ncss>72</ncss>
      <functions>19</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeProject</name>
      <ncss>126</ncss>
      <functions>29</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.RatioMetric</name>
      <ncss>26</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.RatioMetricDeclaration</name>
      <ncss>15</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.Report</name>
      <ncss>2</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.ReportRunner</name>
      <ncss>32</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.Supplement</name>
      <ncss>3</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.SupplementDeclaration</name>
      <ncss>40</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.SupplementRunner</name>
      <ncss>38</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.doclet.PanopticodeDoclet</name>
      <ncss>116</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.AbstractMapItem</name>
      <ncss>34</ncss>
      <functions>12</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.BaseTreemap</name>
      <ncss>200</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.Categorizer</name>
      <ncss>40</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.Category</name>
      <ncss>15</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ComplexityTreemap</name>
      <ncss>25</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ContainerMapItem</name>
      <ncss>45</ncss>
      <functions>14</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.CoverageTreemap</name>
      <ncss>25</ncss>
      <functions>3</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.DefaultCategory</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.LeafMapItem</name>
      <ncss>70</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.EmmaPanopticode</name>
      <ncss>13</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.JDependPanopticode</name>
      <ncss>13</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode</name>
      <ncss>14</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.SupplementTask</name>
      <ncss>37</ncss>
      <functions>9</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.emma.CouldntFindElementException</name>
      <ncss>3</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesException</name>
      <ncss>24</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.emma.EmmaSupplement</name>
      <ncss>235</ncss>
      <functions>26</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement</name>
      <ncss>112</ncss>
      <functions>13</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.jdepend.JDependSupplement</name>
      <ncss>107</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.ArgumentValidation</name>
      <ncss>10</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.SVGHelper</name>
      <ncss>59</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.StringHelper</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>48.81</ncss>
      <functions>8.63</functions>
      <classes>0.07</classes>
      <javadocs>0.14</javadocs>
    </averages>
    <ncss>2,295.00</ncss>
  </objects>

  <functions>
    <function>
      <name>org.panopticode.DecimalMetric.DecimalMetric(DecimalMetricDeclaration,Double)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetric.addValue(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetric.getStringValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetric.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclaration.DecimalMetricDeclaration(Supplement,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclaration.createMetric(Double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclaration.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclaration.metricFromXML(Element,MetricTarget)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetric.IntegerMetric(IntegerMetricDeclaration,Integer)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetric.addValue(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetric.getStringValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetric.getValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclaration.IntegerMetricDeclaration(Supplement,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclaration.createMetric(Integer)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclaration.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclaration.metricFromXML(Element,MetricTarget)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Level.Level(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Level.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.Metric(MetricDeclaration)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.addValue(Element)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.getMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.getStringValue()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Metric.toXML(Element)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.MetricDeclaration(Supplement,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.getDescription()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.getSource()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.addLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.getType()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.setDescription(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.toXML(Element)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.metricFromXML(Element,MetricTarget)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.loadAllMetricsFromXML(Element,MetricTarget,PanopticodeProject)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.XMLRenderer(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.addDescription()</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.addName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.addType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.addScoping()</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclaration.XMLRenderer.render()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.addMetric(Metric)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getChildren()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getName()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getLevel()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getMetricByName(String)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getMetrics()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.getParent()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTarget.isLevel(Level)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.PanopticodeArgument(String,String,String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.getSimpleType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.isParameterizedType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.setParameterizedType(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.equals(Object)</name>
      <ncss>9</ncss>
      <ccn>9</ccn>
      <javadocs>1</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.getFullyQualifiedType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.hashCode()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.isVarArg()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.setParentMethod(PanopticodeMethod)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.toXML(Element)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.setVarArg(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgument.fromXML(Element)</name>
      <ncss>14</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.PanopticodeClass(PanopticodeFile,String,int,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.setEnum(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isEnum()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.setAbstract(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isAbstract()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getParentFile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getMethods()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getFullyQualifiedName()</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getPositionColumn()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getPositionLine()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.toXML(Element)</name>
      <ncss>19</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.fromXML(Element,PanopticodeFile,PanopticodeProject)</name>
      <ncss>20</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.createAndAddMethod(String,List,int,int)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.addMethod(PanopticodeMethod)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getOrCreateMethodListByName(String)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getMethodByNameAndArguments(String,List)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.addMetric(Metric)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isAnonymousInnerClass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isInnerClass()</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getMetricByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.setInterface(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isInterface()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isStatic()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.setStatic(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.getParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClass.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.PanopticodeFile(PanopticodePackage,String,String)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.createAndAddClass(String,int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.addClass(PanopticodeClass)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getClasses()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getParentPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getPath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.hasClassNamed(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.toXML(Element)</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.fromXML(Element,PanopticodePackage,PanopticodeProject)</name>
      <ncss>12</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getMethods()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.addMetric(Metric)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getMetricByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.getParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFile.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.PanopticodeMethod(String,List,int,int)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.isAbstract()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.setAbstract(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.setParentClass(PanopticodeClass)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getParentClass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getArguments()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getFullyQualifiedName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getPositionColumn()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getPositionLine()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.isConstructor()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.setConstructor(boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.toXML(Element)</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.fromXML(Element,PanopticodeProject)</name>
      <ncss>19</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.addMetric(Metric)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getMetricByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getSignature()</name>
      <ncss>18</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getShortSignature()</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.getParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethod.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.PanopticodePackage(PanopticodeProject,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.addMetric(Metric)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.createAndAddFile(String,String)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.addFile(PanopticodeFile)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getFiles()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getParentProject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.hasFileWithPath(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.toXML(Element)</name>
      <ncss>8</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.fromXML(Element,PanopticodeProject)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getClasses()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getMethods()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getMetricByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.isDefaultPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.getParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackage.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.PanopticodeProject(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getSupplementsDeclared()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.createAndAddPackage(String)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.addPackage(PanopticodePackage)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.generateXMLDocument()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getBasePath()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getPackageByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getPackages()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getVersion()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.hasPackage(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.setVersion(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.toFile(File)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.toXML(Element)</name>
      <ncss>12</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.fromFile(File)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.fromXML(Element)</name>
      <ncss>16</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.addSupplementDeclaration(SupplementDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getClasses()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getFiles()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getMethods()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getMetricDeclarations()</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getMetricDeclarations(Level)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.addMetric(Metric)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getLevel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getMetricByName(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getMetrics()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.getParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProject.isLevel(Level)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.RatioMetric(RatioMetricDeclaration,Double,Double)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.addValue(Element)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.getDenominatorValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.getNumeratorValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.getPercentValue()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetric.getStringValue()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclaration.RatioMetricDeclaration(Supplement,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclaration.createMetric(Double,Double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclaration.getType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclaration.metricFromXML(Element,MetricTarget)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Report.runReport(PanopticodeProject,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.ReportRunner.main(String[])</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.ReportRunner.ReportRunner(String,String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.ReportRunner.executeReport()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.ReportRunner.loadReport(String)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Supplement.loadData(PanopticodeProject,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.Supplement.getDeclaration()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.SupplementDeclaration(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.getSupplementClass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.addError(String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.toXML(Element)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.fromXML(Element)</name>
      <ncss>12</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.addMetricDeclaration(MetricDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.getMetricsDeclared()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclaration.getErrors()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementRunner.main(String[])</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementRunner.SupplementRunner(String,String,String[])</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementRunner.executeSupplement()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementRunner.loadSupplement(String)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.languageVersion()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.optionLength(String)</name>
      <ncss>4</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.start(RootDoc)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.getProject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.dumpXMLReport(PanopticodeProject)</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.gatherStructure(RootDoc,PanopticodeProject)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.loadClassInfo(ClassDoc,PanopticodeProject)</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.syntheticConstructor(ExecutableMemberDoc,PanopticodeClass,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.addMethods(PanopticodeClass,ExecutableMemberDoc[],boolean)</name>
      <ncss>34</ncss>
      <ccn>9</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.process(RootDoc)</name>
      <ncss>18</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.readOption(String)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDoclet.readOptionArray(String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.AbstractMapItem(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.escape(String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.setDepth(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.getDepth()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.getName()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.getSize()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.getBounds()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.setBounds(Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.setBounds(double,double,double,double)</name>
      <ncss>4</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.getOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItem.setOrder(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.runReport(PanopticodeProject,String[])</name>
      <ncss>15</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.generateXMLDocument(PanopticodeProject,boolean)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getMetricDeclarations(PanopticodeProject,Level)</name>
      <ncss>6</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getInteractiveLayout(Rect)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getStaticLayout(Rect)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getLayout(Rect,boolean)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.renderSVG(PanopticodeProject,Element,boolean,Rect)</name>
      <ncss>18</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.renderTitle(Element,Rect,PanopticodeProject)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.addDetailLine(Element,String,double,double,String,String)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.addMetricDetails(Element,String,double,double,List)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.renderDetails(Rect,Element,PanopticodeProject,boolean)</name>
      <ncss>36</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getAsId(MetricDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.buildReplaceTextForMetrics(String,String,List)</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.renderJavascriptFunctions(Element,List,List,List,List,List)</name>
      <ncss>39</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getData(PanopticodeProject,boolean)</name>
      <ncss>20</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getCategorizer()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemap.getTitle(PanopticodeProject)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.Categorizer(List,DefaultCategory)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.getCategory(MetricTarget)</name>
      <ncss>5</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.getCategories()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.getDefaultCategory()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.renderHorizontalLegend(Rect,Element)</name>
      <ncss>9</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.renderHorizontalLegendItem(Element,Category,double,double)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Categorizer.renderRectangle(Element,double,double,double,double,String,String)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Category.Category(String,String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Category.getFill()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Category.getBorder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Category.getLegendLabel()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.Category.inCategory(MetricTarget)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemap.ComplexityTreemap()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemap.getTitle(PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemap.getCategorizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemap.ComplexityCategory.ComplexityCategory(int,String,String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemap.ComplexityCategory.inCategory(MetricTarget)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.ContainerMapItem(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.ContainerMapItem(String,int)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.getChildInset()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.addChild(AbstractMapItem)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.getChildren()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>10</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.round(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.getSize()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.setSize(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.getBounds()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.setBounds(Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.setBounds(double,double,double,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.getOrder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItem.setOrder(int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemap.CoverageTreemap()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemap.getTitle(PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemap.getCategorizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemap.CoverageCategory.CoverageCategory(double,String,String,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemap.CoverageCategory.inCategory(MetricTarget)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DefaultCategory.DefaultCategory(String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DefaultCategory.inCategory(MetricTarget)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.LeafMapItem(double,String,String,String,PanopticodeMethod,boolean)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>34</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.addMetricMap(StringBuffer,MetricTarget)</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.getSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.setSize(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.getFill()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.setFill(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.getBorder()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItem.setBorder(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticode.EmmaPanopticode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticode.EmmaPanopticode(Supplement)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticode.setEmmaFile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticode.requireAttributes()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticode.loadSupplement(Supplement,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticode.JDependPanopticode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticode.JDependPanopticode(Supplement)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticode.setJDependFile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticode.requireAttributes()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticode.loadSupplement(Supplement,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode.JavaNCSSPanopticode()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode.JavaNCSSPanopticode(Supplement)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode.setJavaNCSSFile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode.requireAttributes()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticode.loadSupplement(Supplement,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.SupplementTask(Supplement)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.setPanopticodeFile(File)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.execute()</name>
      <ncss>11</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.requireAttribute(Object,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.requireFileExists(File,String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.setProject(PanopticodeProject)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.project()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.loadSupplement(Supplement,PanopticodeProject)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.SupplementTask.requireAttributes()</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.CouldntFindElementException.CouldntFindElementException(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesException.CouldntNarrowMethodMatchesException(PanopticodeMethod,List)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesException.getMessage()</name>
      <ncss>17</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.addCoverageToClass(Element,PanopticodeClass)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.addCoverageToMethod(Element,PanopticodeMethod)</name>
      <ncss>5</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.createMethodCoverageMetric(Element)</name>
      <ncss>16</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.createClassCoverageMetric(Element)</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getCovered(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getDeclaration()</name>
      <ncss>15</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.formatClassName(PanopticodeClass)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.formatMethodName(PanopticodeMethod)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.formatType(PanopticodeArgument)</name>
      <ncss>14</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.replaceAll(String,char,char)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getElementByMethod(Document,PanopticodeMethod)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getPossibleMethodMatches(PanopticodeMethod,Element)</name>
      <ncss>12</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.narrowUsingStrictArgumentMatch(PanopticodeMethod,LinkedList)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.argumentsExactlyMatch(PanopticodeMethod,String)</name>
      <ncss>10</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.argumentsCouldMatch(PanopticodeMethod,String)</name>
      <ncss>22</ncss>
      <ccn>11</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.parseArguments(String)</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getElementByClass(Document,PanopticodeClass)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getElementByFile(Document,PanopticodeFile)</name>
      <ncss>7</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getElementByPackage(Document,PanopticodePackage)</name>
      <ncss>9</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getElementByName(Element,String,String)</name>
      <ncss>6</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.getTotal(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.loadClassData(PanopticodeProject,Document)</name>
      <ncss>7</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.loadData(PanopticodeProject,String[])</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.loadMethodData(PanopticodeProject,Document)</name>
      <ncss>9</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.coverageAppliesTo(PanopticodeClass)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplement.coverageAppliesTo(PanopticodeMethod)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.loadData(PanopticodeProject,String[])</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.loadClassData(PanopticodeProject,Document)</name>
      <ncss>16</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.isSyntheticEnumMethod(PanopticodeMethod)</name>
      <ncss>4</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.isValuesEnumMethod(PanopticodeMethod)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.isValueOfEnumMethod(PanopticodeMethod)</name>
      <ncss>2</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.loadMethodData(PanopticodeProject,Document)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.getDeclaration()</name>
      <ncss>11</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.formatClassName(PanopticodeClass)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.getAdjustedInnerClassConstructorName(PanopticodeMethod)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.formatMethodName(PanopticodeMethod)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.formatArguments(List)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.getElementByClass(Document,PanopticodeClass)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplement.getElementByMethod(Document,PanopticodeMethod)</name>
      <ncss>11</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplement.getDeclaration()</name>
      <ncss>40</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplement.loadData(PanopticodeProject,String[])</name>
      <ncss>9</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplement.loadPackageData(PanopticodeProject,Map)</name>
      <ncss>28</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplement.buildElementMap(Document)</name>
      <ncss>15</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplement.formatName(String)</name>
      <ncss>4</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidation.failIfEmpty(String,String)</name>
      <ncss>3</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidation.failIfNotPositive(int,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidation.failIfNull(Object,String)</name>
      <ncss>3</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.addGrouping(Element,String,String,String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.addRectangle(Element,double,double,double,double,String,String)</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.addText(Element,double,double,String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.addAttributeIfNotEmpty(Element,String,String)</name>
      <ncss>3</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.cleanId(String)</name>
      <ncss>20</ncss>
      <ccn>7</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelper.validIdSpecialCharacter(char)</name>
      <ncss>9</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.StringHelper.notEmpty(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.StringHelper.isEmpty(String)</name>
      <ncss>2</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>5.08</ncss>
      <ccn>1.74</ccn>
      <javadocs>0.02</javadocs>
    </function_averages>
    <ncss>2,295.00</ncss>
  </functions>
</javancss>
