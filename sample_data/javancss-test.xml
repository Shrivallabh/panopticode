<?xml version="1.0"?>
<javancss>
  <date>2007-02-24</date>
  <time>22:27:05</time>
  <packages>
    <package>
      <name>org.panopticode</name>
      <classes>14</classes>
      <functions>130</functions>
      <ncss>1470</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>9</single_comment_lines>
      <multi_comment_lines>273</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.doclet</name>
      <classes>3</classes>
      <functions>13</functions>
      <ncss>136</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>1</single_comment_lines>
      <multi_comment_lines>63</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.report.treemap</name>
      <classes>14</classes>
      <functions>51</functions>
      <ncss>643</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>3</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.ant</name>
      <classes>4</classes>
      <functions>23</functions>
      <ncss>151</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>0</single_comment_lines>
      <multi_comment_lines>28</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.emma</name>
      <classes>2</classes>
      <functions>26</functions>
      <ncss>438</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>13</single_comment_lines>
      <multi_comment_lines>42</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.javancss</name>
      <classes>1</classes>
      <functions>17</functions>
      <ncss>279</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>8</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.supplement.jdepend</name>
      <classes>1</classes>
      <functions>21</functions>
      <ncss>141</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>3</single_comment_lines>
      <multi_comment_lines>0</multi_comment_lines>
    </package>
    <package>
      <name>org.panopticode.util</name>
      <classes>3</classes>
      <functions>13</functions>
      <ncss>134</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>7</single_comment_lines>
      <multi_comment_lines>21</multi_comment_lines>
    </package>
    <total>
      <classes>42</classes>
      <functions>294</functions>
      <ncss>3392</ncss>
      <javadocs>0</javadocs>
      <javadoc_lines>0</javadoc_lines>
      <single_comment_lines>44</single_comment_lines>
      <multi_comment_lines>469</multi_comment_lines>
    </total>
    <table>
      <tr><td>Packages</td><td>Classes</td><td>Functions</td><td>NCSS</td><td>Javadocs</td><td>per</td></tr>
      <tr><td>8.00</td><td>42.00</td><td>294.00</td><td>3,392.00</td><td>0.00</td><td>Project</td></tr>
      <tr><td></td><td>5.25</td><td>36.75</td><td>424.00</td><td>0.00</td><td>Package</td></tr>
      <tr><td></td><td></td><td>7.00</td><td>80.76</td><td>0.00</td><td>Class</td></tr>
      <tr><td></td><td></td><td></td><td>11.54</td><td>0.00</td><td>Function</td></tr>
    </table>
  </packages>

  <objects>
    <object>
      <name>org.panopticode.DecimalMetricDeclarationTest</name>
      <ncss>15</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.FakeSupplement</name>
      <ncss>6</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.IntegerMetricDeclarationTest</name>
      <ncss>16</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.MetricDeclarationTest</name>
      <ncss>101</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.MetricTest</name>
      <ncss>42</ncss>
      <functions>4</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeArgumentTest</name>
      <ncss>122</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeClassTest</name>
      <ncss>198</ncss>
      <functions>18</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeFileTest</name>
      <ncss>129</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeMethodTest</name>
      <ncss>208</ncss>
      <functions>16</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodePackageTest</name>
      <ncss>149</ncss>
      <functions>11</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.PanopticodeProjectTest</name>
      <ncss>222</ncss>
      <functions>16</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.RatioMetricDeclarationTest</name>
      <ncss>17</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.SupplementDeclarationTest</name>
      <ncss>66</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.TestHelpers</name>
      <ncss>88</ncss>
      <functions>21</functions>
      <classes>3</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest</name>
      <ncss>58</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest</name>
      <ncss>52</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.doclet.PanopticodeDocletTest</name>
      <ncss>9</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.AbstractMapItemTest</name>
      <ncss>44</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.BaseTreemapRenderSVGTest</name>
      <ncss>15</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.CategorizerStub</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ContainerMapItemStub</name>
      <ncss>5</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub</name>
      <ncss>13</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.BaseTreemapTest</name>
      <ncss>148</ncss>
      <functions>10</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.DummyTreemap</name>
      <ncss>7</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.NonRenderingTreemap</name>
      <ncss>6</ncss>
      <functions>1</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.CategorizerTest</name>
      <ncss>20</ncss>
      <functions>1</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ComplexityTreemapTest</name>
      <ncss>37</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.ContainerMapItemTest</name>
      <ncss>82</ncss>
      <functions>5</functions>
      <classes>1</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.CoverageTreemapTest</name>
      <ncss>36</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.DefaultCategoryTest</name>
      <ncss>17</ncss>
      <functions>3</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.report.treemap.LeafMapItemTest</name>
      <ncss>147</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest</name>
      <ncss>37</ncss>
      <functions>6</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest</name>
      <ncss>30</ncss>
      <functions>5</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticodeTest</name>
      <ncss>28</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase</name>
      <ncss>35</ncss>
      <functions>8</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesExceptionTest</name>
      <ncss>17</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest</name>
      <ncss>407</ncss>
      <functions>24</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest</name>
      <ncss>271</ncss>
      <functions>17</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest</name>
      <ncss>131</ncss>
      <functions>21</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.ArgumentValidationTest</name>
      <ncss>24</ncss>
      <functions>4</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.SVGHelperTest</name>
      <ncss>89</ncss>
      <functions>7</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <object>
      <name>org.panopticode.util.StringHelperTest</name>
      <ncss>13</ncss>
      <functions>2</functions>
      <classes>0</classes>
      <javadocs>0</javadocs>
    </object>
    <averages>
      <ncss>75.29</ncss>
      <functions>7.00</functions>
      <classes>0.19</classes>
      <javadocs>0.00</javadocs>
    </averages>
    <ncss>3,392.00</ncss>
  </objects>

  <functions>
    <function>
      <name>org.panopticode.DecimalMetricDeclarationTest.setUp()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclarationTest.testCreateMetric()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.DecimalMetricDeclarationTest.testGetType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.FakeSupplement.optionLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.FakeSupplement.loadData(PanopticodeProject,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.FakeSupplement.getDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclarationTest.setUp()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclarationTest.testCreateMetric()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.IntegerMetricDeclarationTest.testGetType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.setUp()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.testMetricLevelSetting()</name>
      <ncss>18</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.testConstructorSetsSourceSupplementAndName()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.testDescription()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.testToXML()</name>
      <ncss>31</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricDeclarationTest.testLoadAllMetricsFromXML()</name>
      <ncss>34</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.testMetricDeclarationMustBeSet()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.testConstructorSetsMetricDeclaration()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.testGetName()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.testToXML()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.DummyMetric.DummyMetric(MetricDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.DummyMetric.addValue(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.DummyMetric.getStringValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.MetricTest.DummyMetric.addValueCalled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.setUp()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testSetParentMethod()</name>
      <ncss>7</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testConstructorFailsWhenRequiredValuesNotSet()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.assertContructorThrowsIllegalArgumentExceptionWhenARequiredArgumentIsBlank(String,String)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testConstructorSetsPropertiesToMatchArgumentsPassed()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testEqualsAndHashcodeFollowJavaContract()</name>
      <ncss>20</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testToXML()</name>
      <ncss>22</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testFromXML()</name>
      <ncss>24</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testGetSetVararg()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeArgumentTest.testGetSetParemterizedType()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.setUp()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testLevel()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testAddingSameMetricTwiceOnlyStoresOnce()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testConstructorSetPropertiesToMatchArgumentsPassed()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testConstructorFailsWithNullFile()</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testConstructorFailsWithNullOrEmptyName()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testToXML()</name>
      <ncss>44</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testFromXML()</name>
      <ncss>18</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testMethodAddingAndRetrieval()</name>
      <ncss>26</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.assertIllegalArgumentExceptionThrownWhenConstructedWithName(String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetSetEnum()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetSetInterface()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetSetStatic()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetSetAbstract()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testIsAnonymousInnerClass()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testIsInnerClass()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetFullyQualifiedName()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeClassTest.testGetMetricByName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.setUp()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testAddingSameMetricTwiceOnlyStoresOnce()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testConstructorSetPropertiesToMatchArgumentsPassed()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testConstructorPullsBasePathOffOfPath()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testGetMetricByName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testClassAddingAndRetrieval()</name>
      <ncss>17</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testLevel()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testToXML()</name>
      <ncss>25</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testFromXML()</name>
      <ncss>19</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeFileTest.testGetMethods()</name>
      <ncss>19</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.setUp()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testAddingSameMetricTwiceOnlyStoresOnce()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testChildren()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testLevel()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testConstructorFailsWhenRequiredValuesNotSet()</name>
      <ncss>16</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.assertConstructorFailsOnRequiredArgumentsThatAreNotPositive(int,int)</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.assertConstructorFailsOnRequiredArgumentsThatAreEmpty(String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testConstructorSetsPropertiesToMatchArgumentsPassed()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testIsConstructorSetConstructor()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testAbstract()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testToXML()</name>
      <ncss>34</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testFromXML()</name>
      <ncss>36</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testGetSetParentClass()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testGetFullyQualifiedName()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testGetMetricByName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeMethodTest.testGetSignature()</name>
      <ncss>32</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.setUp()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testLevel()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testConstructorSetPropertiesToMatchArgumentsPassed()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testGetMetricByName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testAddingSameMetricTwiceOnlyStoresOnce()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testFileAddingAndRetrieval()</name>
      <ncss>24</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testToXML()</name>
      <ncss>22</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testFromXML()</name>
      <ncss>22</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testIsDefaultPackage()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testGetMethods()</name>
      <ncss>21</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodePackageTest.testGetClasses()</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.setUp()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGetMetricByName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testAddingSameMetricTwiceOnlyStoresOnce()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testParent()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testLevel()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testConstructorSetPropertiesToMatchArgumentsPassed()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testVersion()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testPackageAddingAndRetrieval()</name>
      <ncss>21</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testgetMetricDeclarations()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testToXML()</name>
      <ncss>32</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testFromXML()</name>
      <ncss>28</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGenerateXMLDocument()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGetMethods()</name>
      <ncss>23</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGetClasses()</name>
      <ncss>22</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGetFiles()</name>
      <ncss>20</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.PanopticodeProjectTest.testGetSupplementsDeclared()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclarationTest.setUp()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclarationTest.testCreateMetric()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.RatioMetricDeclarationTest.testGetType()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.setUp()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.testGetSupplementClass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.testGetErrors()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.testGetMetricsDeclared()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.testToXML()</name>
      <ncss>24</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.SupplementDeclarationTest.testFromXML()</name>
      <ncss>16</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.Comparable$1.compareTo(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.assertEqualsAndHashcodeFollowJavaContract(Object,Object,Object)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createPackage(PanopticodeProject,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createFile(PanopticodePackage,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createClass(PanopticodeFile,String,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createMethod(String,List,int,int)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createArgument(String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyArgument()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyArgumentList()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyClass()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyFile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyMethod()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.Supplement$2.optionLength()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.Supplement$2.loadData(PanopticodeProject,String[])</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.Supplement$2.getDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummySupplement()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummySupplementDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyMetricDeclaration()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyProject()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyDocument()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyElement()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.createDummyMetric()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.dumpXMLReport(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.dumpXMLReport(Document)</name>
      <ncss>8</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.DummyMetric.DummyMetric(MetricDeclaration)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.DummyMetric.addValue(Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.DummyMetric.getStringValue()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.TestHelpers.DummyMetric.addValueCalled()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.setUp()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.tearDown()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.testGatherStructureFromDoclet()</name>
      <ncss>20</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.buildClassDoc(String,String,String)</name>
      <ncss>23</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.addPackageDoc(Mock,String)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletGatherStructureTest.MockableFile.MockableFile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest.setUp()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest.tearDown()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest.testOutputToFile()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest.testMultipleOptionsSpecified()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletOptionTest.testOneOptionSpecified()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletTest.testOptionLengthIdentifiesParametersCorrectly()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletTest.testOptionLengthRejectsUnknownParameters()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.doclet.PanopticodeDocletTest.testLanguageVersion()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.testBounds()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.assertEquals(Rect,Rect)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.testDepth()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.testName()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.testOrder()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.StubMapItem(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.getTitle()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.renderSVG(Rect)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.getSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.AbstractMapItemTest.StubMapItem.setSize(double)</name>
      <ncss>1</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapRenderSVGTest.testRenderSVG()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub.getCategorizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub.getTitle(PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub.renderTitle(Element,Rect,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub.renderDetails(Rect,Element,PanopticodeProject,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ManualBaseTreemapStub.getData(PanopticodeProject,boolean)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemStub.ContainerMapItemStub()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemStub.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CategorizerStub.CategorizerStub()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CategorizerStub.renderHorizontalLegend(Rect,Element)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testGenerateXMLDoccument()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testGetData()</name>
      <ncss>32</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testGetLayout()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testInteractiveLayoutDoesntExceedBoundaries()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testRenderInteractiveDetails()</name>
      <ncss>31</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testRenderStaticDetails()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testRenderTitle()</name>
      <ncss>16</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testRunReport()</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.testStaticLayoutDoesntExceedBoundaries()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.BaseTreemapTest.assertWithin(Rect,Rect)</name>
      <ncss>9</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DummyTreemap.getCategorizer()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DummyTreemap.getTitle(PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.NonRenderingTreemap.renderSVG(PanopticodeProject,Element,boolean,Rect)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CategorizerTest.testRenderHorizontalLegendDoesntExplodeHorrifically()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CategorizerTest.DummyCategory.DummyCategory(String,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CategorizerTest.DummyCategory.inCategory(MetricTarget)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemapTest.testCategorizerThesholds()</name>
      <ncss>24</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemapTest.testTitle()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ComplexityTreemapTest.categoryForComplexityOf(Categorizer,int)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.testConstructorSetsPropertiesCorrectly()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.testBounds()</name>
      <ncss>22</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.testOrder()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.testSize()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.testRenderSVG()</name>
      <ncss>24</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.SizedMapItem.SizedMapItem(String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.SizedMapItem.renderSVG(Rect,Element,PanopticodeProject)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.SizedMapItem.getSize()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.ContainerMapItemTest.SizedMapItem.setSize(double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemapTest.testCategorizerThesholds()</name>
      <ncss>23</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemapTest.testTitle()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.CoverageTreemapTest.categoryForCoverageOf(Categorizer,double)</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DefaultCategoryTest.setUp()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DefaultCategoryTest.testConstructorSetsAttributesCorrectly()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.DefaultCategoryTest.testInCategory()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.setUp()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testBorder()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testConstructorSetsAttributesProperly()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testFill()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testRenderSVGWithNoNCSSDoesNothing()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testRenderInteractiveSVG()</name>
      <ncss>60</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testRenderStaticSVG()</name>
      <ncss>31</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.report.treemap.LeafMapItemTest.testSizeIsNotChangedBySetter()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.setUp()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.testShouldEnforcePanopticodeStructureSet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.testShouldEnforcePanopticodeStructureExists()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.testShouldEnforceEmmaFileSet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.testShouldEnforcePanopticodeFileExists()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.EmmaPanopticodeTest.testShouldLoadEmmaSupplement()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest.setUp()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest.testShouldEnforcePanopticodeStructureSet()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest.testShouldEnforceJDependFileSet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest.testShouldEnforceJDependFileExists()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JDependPanopticodeTest.testShouldLoadJDependSupplement()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticodeTest.setUp()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticodeTest.testShouldEnforceJavaNCSSFileSet()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticodeTest.testShouldEnforceJavaNCSSFileExists()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.JavaNCSSPanopticodeTest.testShouldLoadJavaNCSSSupplement()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.PanopticodeAntTaskTestCase()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.mockProject()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.existingFile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.mockCalledFile(boolean)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.mockFile()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.assertAttributeFailedWhenNotSet(SupplementTask,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.assertFileAttributeFailedWhenNotExists(SupplementTask,String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.ant.PanopticodeAntTaskTestCase.loadSupplementWithProject(SupplementTask)</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesExceptionTest.testGetMessage()</name>
      <ncss>11</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.CouldntNarrowMethodMatchesExceptionTest.createElement(String)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testAddCoverageToClass()</name>
      <ncss>26</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testAddCoverageToMethod()</name>
      <ncss>25</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoveredTotalParsing()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoverageAppliesToMethod()</name>
      <ncss>7</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoverageAppliesToAbstractMethod()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoverageAppliesToInterfaceMethod()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoverageAppliesToClass()</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testCoverageAppliesToInterface()</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testFormatMethodName()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testSyntheticEnumConstructorArgumentsAreIgnoredInMatching()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testFormatClassName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testFormatType()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.assertFormattedTypeEquals(String,String)</name>
      <ncss>4</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testMetricsDeclaredOnlyOnce()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testMetricsDeclaredProperly()</name>
      <ncss>32</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testGetElementByPackage()</name>
      <ncss>14</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testGetElementByFile()</name>
      <ncss>22</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testGetElementByClass()</name>
      <ncss>25</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testGetElementByMethod()</name>
      <ncss>77</ncss>
      <ccn>5</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testSupplementDeclarationAddedToProjectOnLoad()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.testLoadData()</name>
      <ncss>36</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.assertMetricValue(PanopticodeClass,String,double,double)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.assertMetricValue(PanopticodeMethod,String,double,double)</name>
      <ncss>5</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.emma.EmmaSupplementTest.createEmmaDocument()</name>
      <ncss>51</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.setUp()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testMetricsDeclaredOnlyOnce()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testGetAdjustedInnerClassConstructorName()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testFormatMethodName()</name>
      <ncss>27</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testMetricsDeclaredProperly()</name>
      <ncss>23</ncss>
      <ccn>4</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testSupplementDeclarationAddedToProjectOnLoad()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testFormatsClassNameInDefaultPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testFormatsClassNameInNonDefaultPackage()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testGetElementByClassFailsCorrectlyWhenNoneExists()</name>
      <ncss>10</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testGetElementByClassFindsCorrectElement()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testGetElementByMethodFailsCorrectlyWhenNoneExists()</name>
      <ncss>12</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testGetElementByMethodFindsCorrectElement()</name>
      <ncss>15</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testLoadClassData()</name>
      <ncss>46</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testLoadMethodData()</name>
      <ncss>51</ncss>
      <ccn>6</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.buildClass(PanopticodeProject,String,String)</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.buildClass(String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.javancss.JavaNCSSSupplementTest.testIsSyntheticEnumMethod()</name>
      <ncss>37</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testAbstractClassesMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testAbstractnessMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testAfferentCouplingMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testBuildElementMap()</name>
      <ncss>22</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testConcreteClassesMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testCorrectMetricsDeclared()</name>
      <ncss>8</ncss>
      <ccn>13</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testDistanceMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testEfferentCouplingMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testFormatPackageName()</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testInstabilityMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testIsSupplement()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testLoadPackageData()</name>
      <ncss>38</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.assertDecimalMetricValue(Double,PanopticodePackage,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.assertIntegerMetricValue(Integer,PanopticodePackage,String)</name>
      <ncss>3</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testMetricsDeclaredOnlyOnce()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testSupplementDeclarationAddedToProjectOnLoad()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testThrowsExceptionWhenFileNotFound()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testTotalClassesMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.testVolatilityMetricDeclaration()</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.assertMetricDeclaredProperly(String,String)</name>
      <ncss>10</ncss>
      <ccn>3</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.supplement.jdepend.JDependSupplementTest.assertOnlyDeclaredAtPackageLevel(MetricDeclaration)</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidationTest.testFailIfEmpty()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidationTest.testFailIfNull()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidationTest.testFailIfNotPositive()</name>
      <ncss>6</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.ArgumentValidationTest.assertFailIfEmptyThrowsIllegalArgumentException(String)</name>
      <ncss>5</ncss>
      <ccn>2</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.testAddGroupingWithAllOptionalArguments()</name>
      <ncss>14</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.testAddGroupingWithNoOptionalArguments()</name>
      <ncss>8</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.testAddRectangle()</name>
      <ncss>20</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.testAddText()</name>
      <ncss>13</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.testCleanId()</name>
      <ncss>29</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.addAttributeExpectation(Mock,String,double)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.SVGHelperTest.addAttributeExpectation(Mock,String,String)</name>
      <ncss>2</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.StringHelperTest.testIsEmpty()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function>
      <name>org.panopticode.util.StringHelperTest.testNotEmpty()</name>
      <ncss>6</ncss>
      <ccn>1</ccn>
      <javadocs>0</javadocs>
    </function>
    <function_averages>
      <ncss>9.58</ncss>
      <ccn>1.23</ccn>
      <javadocs>0.00</javadocs>
    </function_averages>
    <ncss>3,392.00</ncss>
  </functions>
</javancss>
