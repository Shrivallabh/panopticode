<!--
 Copyright (c) 2006-2007 Julias R. Shaw

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to
 deal in the Software without restriction, including without limitation the
 rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 sell copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 IN THE SOFTWARE.
-->
<project name="Panopticode Imports">
    <import file="batik/batik-imports.xml" />
    <import file="supplements/checkstyle/checkstyle-imports.xml" />
    <import file="supplements/complexian/complexian-imports.xml" />
    <import file="supplements/javancss/javancss-imports.xml" />
    <import file="supplements/jdepend/jdepend-imports.xml" />
    <import file="supplements/simian/simian-imports.xml" />
    <import file="supplements/git/git-imports.xml" />
    <import file="supplements/cobertura/cobertura-imports.xml" />
    <!--
        Support for Emma has been dropped as the project has not been maintained. 

        If you do not want to collect coverage data then choose the 'nocoverage' import.  
    
            <import file="supplements/nocoverage-imports.xml" />
    -->


    <!--
        Panopticode plans to support multiple source code management tools.  If your tool is listed below then select
        its import.  If you are not using one of the SCM tools listed below choose the 'noscm' import.  You choose your
        SCM tool by using exactly one of the following import statements:

            <import file="plugins/subversion/subversion-imports.xml" />
            <import file="plugins/noscm-imports.xml" />

        The default is Subversion.
    -->
    <import file="supplements/subversion/subversion-imports.xml" />

    <macrodef name="panopticode">
        <attribute name="classDir" default="target/classes" />
        <attribute name="panopticodeDir" default="panopticode" />
        <attribute name="projectDir" />
        <attribute name="projectName" />
        <attribute name="projectVersion" />
        <attribute name="outputDir" default="target" />
        <attribute name="srcDir" default="src" />
        <attribute name="churn-since" />
        <attribute name="churn-until"  />
        

        <sequential>
            <!-- We don't want any old data to slip in -->
                <antcall target="clean" />

            <!-- Run the panopticode doclet to build the core data structure -->
                <mkdir dir="@{outputDir}" />

                <javadoc classpath="@{panopticodeDir}/panopticode.jar"
                         sourcepath="@{srcDir}"
                         access="private">
                  <fileset dir="@{srcDir}" />
                  <doclet name="org.panopticode.doclet.PanopticodeDoclet"
                          path="@{panopticodeDir}/panopticode.jar">
                    <param name="-debug" value="true" />
                    <param name="-projectName" value="@{projectName}" />
                    <param name="-projectVersion" value="@{projectVersion}" />
                    <param name="-outputFile" value="@{outputDir}/panopticode.xml" />
                  </doclet>
                </javadoc>

            <!-- Run any metrics that work directly on source code (i.e. They don't need compiled code) here -->
                <panopticode-javancss panopticodeDir="@{panopticodeDir}"
                                      outputDir="@{outputDir}"
                                      srcDir="@{srcDir}" />

				<taskdef name="javancssPanopticode" classpath="panopticode/panopticode.jar"
					classname="org.panopticode.supplement.ant.JavaNCSSPanopticode" />

				<javancssPanopticode
					panopticodeFile="@{outputDir}/panopticode.xml"
					javancssFile="@{outputDir}/rawmetrics/xml/javancss.xml" />

                <panopticode-checkstyle panopticodeDir="@{panopticodeDir}"
                                        configFile="@{panopticodeDir}/supplements/checkstyle/etc/panopticode_checks.xml"
                                        outputDir="@{outputDir}"
                                        srcDir="@{srcDir}" />

                <panopticode-complexian panopticodeDir="@{panopticodeDir}"
                                        outputDir="@{outputDir}"
                                        srcDir="@{srcDir}"/>

                <panopticode-simian panopticodeDir="@{panopticodeDir}"
                                    outputDir="@{outputDir}"
                                    srcDir="@{srcDir}"/>

                <!--<panopticode-scm-log projectDir="@{projectDir}"
                                     outputDir="@{outputDir}" />-->

            <!-- Time to compile -->
                <antcall target="compile" />

            <!-- Run any metrics that require compiled code here -->
                <!-- JDepend (We want to run this just after compile so we don't gather metrics on extra code -->
                <!--
                    <panopticode-jdepend panopticodeDir="@{panopticodeDir}"
                                         outputDir="@{outputDir}"
                                         classDir="@{classDir}" />
					<taskdef name="jdependPanopticode" classpath="panopticode/panopticode.jar"
						classname="org.panopticode.supplement.ant.JDependPanopticode" />

					<jdependPanopticode
						panopticodeFile="@{outputDir}/panopticode.xml"
						jdependFile="@{outputDir}/rawmetrics/xml/jdepend.xml" />
	-->
                <!-- Coverage -->
                <panopticode-setup-coverage outputDir="@{outputDir}"
                                            classDir="@{classDir}" />
                <antcall target="unit-test" />
                <panopticode-report-coverage srcDir="@{srcDir}"
                                             outputDir="@{outputDir}"/>

                <taskdef name="panopticodeCobertura" 
                         classpath="panopticode/panopticode.jar" 
                         classname="org.panopticode.supplement.ant.CoberturaPanopticode" />

                <panopticodeCobertura panopticodeFile="@{outputDir}/panopticode.xml" 
                                      coberturaFile="@{outputDir}/rawmetrics/xml/cobertura.xml" />

                <mkdir dir="@{outputDir}/log" />


                <taskdef name="gitChurnPanopticode"
                         classpath="panopticode/panopticode.jar"
                         classname="org.panopticode.supplement.ant.GitChurnPanopticode" />

                <git-log from="@{churn-since}"
                         to="@{churn-until}"
                         dir="@{srcdir}"
                         gitLog="@{outputDir}/log/git.log">
                </git-log>
                <gitChurnPanopticode panopticodeFile="@{outputDir}/panopticode.xml"
                                     from="@{churn-since}"
                                     to="@{churn-until}"
                                     gitLog="@{outputDir}/log/git.log">
                </gitChurnPanopticode>

                <taskdef name="c3Panopticode"
                         classpath="panopticode/panopticode.jar"
                         classname="org.panopticode.supplement.ant.C3Panopticode" />
                <!-- This should be the last task run as it dependes on execution of 
                     other supplement tasks -->
                <c3Panopticode panopticodeFile="@{outputDir}/panopticode.xml" />

            <!-- Run the reports -->
                <mkdir dir="@{outputDir}/reports/svg" />

                <echo message="Building Static Reports" />

                <report pluginClass="org.panopticode.report.treemap.ComplexityTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/complexity-treemap.svg" />

                <report pluginClass="org.panopticode.report.treemap.CoverageTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/coverage-treemap.svg" />

                <report pluginClass="org.panopticode.report.treemap.C3Treemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/c3-treemap.svg" />

                <report pluginClass="org.panopticode.report.treemap.ChurnTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/churn-treemap.svg" />

                <echo message="Building Interactive Reports" />

                <report pluginClass="org.panopticode.report.treemap.ComplexityTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/interactive-complexity-treemap.svg"
                        interactive="-interactive" />

                <report pluginClass="org.panopticode.report.treemap.CoverageTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/interactive-coverage-treemap.svg"
                        interactive="-interactive" />

                <report pluginClass="org.panopticode.report.treemap.C3Treemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/interactive-c3-treemap.svg"
                        interactive="-interactive" />

                <report pluginClass="org.panopticode.report.treemap.ChurnTreemap"
                        panopticodeDir="@{panopticodeDir}"
                        panopticodeXmlFile="@{outputDir}/panopticode.xml"
                        file="@{outputDir}/reports/svg/interactive-churn-treemap.svg"
                        interactive="-interactive" />
        </sequential>
    </macrodef>

    <macrodef name="report">
        <attribute name="panopticodeDir" />
        <attribute name="pluginClass" />
        <attribute name="panopticodeXmlFile" />
        <attribute name="file" />
        <attribute name="interactive" default="" />

        <sequential>
            <java classpath="@{panopticodeDir}/panopticode.jar"
                  classname="org.panopticode.ReportRunner"
                  fork="true" >
              <arg value="@{pluginClass}"/>
              <arg value="@{panopticodeXmlFile}"/>
              <arg value="@{file}"/>
              <arg value="@{interactive}"/>
            </java>
        </sequential>
    </macrodef>
</project>